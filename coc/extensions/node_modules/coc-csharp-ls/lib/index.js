"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  activate: () => activate
});
module.exports = __toCommonJS(src_exports);
var import_coc = require("coc.nvim");
"strict";
var SCOPE = "csharp-ls";
var INSTALL = SCOPE + ".install";
var START = SCOPE + ".start";
async function activate(context) {
  const logger = context.logger;
  const cfg = import_coc.workspace.getConfiguration(SCOPE);
  const path = cfg.get("path");
  let client;
  const install = () => {
    import_coc.window.openTerminal("dotnet tool install --global csharp-ls");
    import_coc.window.showInformationMessage(`Run ${START} to start or restart server`);
  };
  const start = () => {
    if (client) {
      client.started ? client.restart() : client.needsStart() ? client.start() : null;
    } else {
      const serverOptions = { command: (0, import_coc.executable)(path) ? path : "csharp-ls" };
      const clientOptions = {
        documentSelector: [{ language: "cs" }],
        progressOnInitialization: true
      };
      client = new import_coc.LanguageClient(SCOPE, SCOPE, serverOptions, clientOptions);
      context.subscriptions.push(import_coc.services.registLanguageClient(client));
    }
  };
  import_coc.commands.registerCommand(INSTALL, () => {
    install();
  });
  import_coc.commands.registerCommand(START, () => {
    start();
  });
  if ((0, import_coc.executable)(path)) {
    start();
  } else {
    if (await import_coc.window.showPrompt(`${path} is not executable. Install csharp-ls now?`)) {
      install();
    } else {
      import_coc.window.showInformationMessage(`Run ${INSTALL} to install csharp-ls`);
    }
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  activate
});
